import React, { useState, useEffect } from 'react';
import { StyleSheet, Text, View, TouchableOpacity, Modal, Button, FlatList, TextInput, Dimensions, ImageBackground, ScrollView, Animated, Easing } from 'react-native';

// Lista de materiais recicl√°veis e suas informa√ß√µes --------------------------------------------------------------------------------------------------
const materiaisReciclaveis = [
  { id: 1, nome: 'Papel', descricao: 'O papel √© reciclado atrav√©s de um processo que envolve a coleta, separa√ß√£o, tritura√ß√£o e transforma√ß√£o das fibras de celulose em uma nova folha de papel. Ap√≥s a reciclagem, o papel pode ser utilizado para produzir uma variedade de produtos, incluindo papel higi√™nico, cadernos, embalagens e muito mais.', cor: '#f9c2ff', imagem: require('../../assets/papel.png') },
  { id: 2, nome: 'Pl√°stico', descricao: 'O pl√°stico √© reciclado atrav√©s de um processo que envolve a coleta, separa√ß√£o por tipo e limpeza dos res√≠duos pl√°sticos. Em seguida, os pl√°sticos s√£o derretidos e transformados em pequenos gr√¢nulos, que podem ser utilizados na fabrica√ß√£o de uma variedade de produtos, como garrafas, embalagens, brinquedos, entre outros.', cor: '#ffe0b2', imagem: require('../../assets/plastico.png') },
  { id: 3, nome: 'Vidro', descricao: 'O vidro √© reciclado atrav√©s da coleta e separa√ß√£o por cor. Os vidros s√£o triturados e derretidos em altas temperaturas para formar novos produtos de vidro, como garrafas, potes, copos, e at√© mesmo em obras de arte e decora√ß√£o.', cor: '#b2ebf2', imagem: require('../../assets/vidro.png') },
  { id: 4, nome: 'Metal', descricao: 'Os metais s√£o reciclados atrav√©s de um processo que envolve a coleta, separa√ß√£o por tipo (como alum√≠nio e a√ßo), limpeza e fus√£o dos materiais. Ap√≥s o derretimento, os metais podem ser moldados em novos produtos, como latas, utens√≠lios dom√©sticos, pe√ßas automotivas e estruturas met√°licas.', cor: '#c8e6c9', imagem: require('../../assets/metal.png') },
  { id: 5, nome: 'Lixo Org√¢nico', descricao: 'Os res√≠duos org√¢nicos s√£o reciclados atrav√©s da compostagem, um processo natural em que os materiais org√¢nicos, como restos de alimentos e res√≠duos de jardim, s√£o decompostos por microorganismos para formar um composto org√¢nico rico em nutrientes, utilizado como fertilizante natural para o solo.', cor: '#dcedc8', imagem: require('../../assets/organico.png') },
  { id: 6, nome: 'Lixos Naturais', descricao: 'Materiais naturais, como madeira e pedra, podem ser reciclados de v√°rias maneiras, incluindo reutiliza√ß√£o, compostagem ou reciclagem industrial. A madeira reciclada pode ser utilizada na fabrica√ß√£o de m√≥veis, pisos e estruturas, enquanto a pedra pode ser reutilizada em paisagismo, constru√ß√£o e decora√ß√£o.', cor: '#c5e1a5', imagem: require('../../assets/naturais.png') },
  { id: 7, nome: 'Lixos Eletr√¥nicos', descricao: 'Os equipamentos eletr√¥nicos, como celulares, computadores e TVs, podem ser reciclados para recuperar materiais valiosos, como metais preciosos, pl√°sticos e vidro. Os dispositivos s√£o desmontados, as pe√ßas s√£o separadas e os materiais s√£o processados para reutiliza√ß√£o na fabrica√ß√£o de novos eletr√¥nicos ou em outras ind√∫strias.', cor: '#ffc107', imagem: require('../../assets/eletronicos.png') },
  { id: 8, nome: 'Pilhas e Baterias', descricao: 'As pilhas e baterias s√£o recicladas para evitar a contamina√ß√£o do meio ambiente por metais pesados ‚Äã‚Äãe outros materiais t√≥xicos. Os componentes das pilhas e baterias s√£o separados e processados para recuperar materiais como metal, pl√°stico e componentes eletr√¥nicos. Esses materiais reciclados podem ser reutilizados na fabrica√ß√£o de novas pilhas e baterias ou em outros produtos.', cor: '#f06292', imagem: require('../../assets/pilhas_baterias.png') },
];

// Calcula a largura do dispositivo para determinar o tamanho dos itens da lista-----------------------------------------------------
const larguraTela = Dimensions.get('window').width;
const numColunas = 2;
const larguraItem = (larguraTela - 40) / numColunas;
const alturaItem = 160; // Altura dos itens recicl√°veis

export default function App() {
  const [modalVisivel, setModalVisivel] = useState(false); // controlar a visibilidade do modal
  const [materialSelecionado, setMaterialSelecionado] = useState(null); // armazenar o material selecionado

  // Animacao para o modal ------------------------------------------------------------------------------------
  const scaleValue = useState(new Animated.Value(0))[0];

  useEffect(() => {
    if (modalVisivel) {
      Animated.timing(scaleValue, {
        toValue: 1,
        duration: 300,
        easing: Easing.linear,
        useNativeDriver: true,
      }).start();
    } else {
      Animated.timing(scaleValue, {
        toValue: 0,
        duration: 300,
        easing: Easing.linear,
        useNativeDriver: true,
      }).start();
    }
  }, [modalVisivel]);

  // Abrir o modal com as informa√ß√µes do material -----------------------------------------------------------------------
  const abrirModal = (material) => {
    setMaterialSelecionado(material);
    setModalVisivel(true);
  };

  // Fechar o modal -----------------------------------------------------------------------------------------------------
  const fecharModal = () => {
    setModalVisivel(false);
  };

  // Renderizar item da lista -------------------------------------------------------------------------------------------
  const renderItem = ({ item }) => (
    <TouchableOpacity style={[styles.item, { backgroundColor: 'transparent' }]} onPress={() => abrirModal(item)}>
      <ImageBackground source={item.imagem} style={styles.imagemFundo} resizeMode="cover">
        <Text style={styles.material}>{item.nome}</Text>
      </ImageBackground>
    </TouchableOpacity>
  );

  return (
    <View style={styles.container}>
      <View style={styles.containerSuperior}>
        <Text style={styles.textoPrincipal}>O que voc√™ gostaria de reciclar hoje?</Text>
        <View style={styles.containerPesquisa}>
          <TouchableOpacity style={styles.botaoPesquisa}>
            <Text style={styles.textoBotaoPesquisa}>üîç</Text>
          </TouchableOpacity>
          <TextInput
            style={styles.input}
            placeholder="Digite seu endere√ßo"
            placeholderTextColor="rgba(0, 0, 0, 0.5)"
          />
        </View>
      </View>
      <ScrollView style={styles.containerInferior}>
        <View style={styles.lista}>
          <View style={styles.coluna}>
            {materiaisReciclaveis.slice(0, 4).map((material) => (
              <TouchableOpacity key={material.id} style={[styles.item, { backgroundColor: 'transparent' }]} onPress={() => abrirModal(material)}>
                <ImageBackground source={material.imagem} style={styles.imagemFundo} resizeMode="cover">
                  <Text style={styles.material}>{material.nome}</Text>
                </ImageBackground>
              </TouchableOpacity>
            ))}
          </View>
          <View style={styles.coluna}>
            {materiaisReciclaveis.slice(4).map((material) => (
              <TouchableOpacity key={material.id} style={[styles.item, { backgroundColor: 'transparent' }]} onPress={() => abrirModal(material)}>
                <ImageBackground source={material.imagem} style={styles.imagemFundo} resizeMode="cover">
                  <Text style={styles.material}>{material.nome}</Text>
                </ImageBackground>
              </TouchableOpacity>
            ))}
          </View>
        </View>
      </ScrollView>
      
      {/* Modal para exibir as informa√ß√µes detalhadas do material selecionado */}
      <Modal
        animationType="fade"
        transparent={true}
        visible={modalVisivel}
        onRequestClose={fecharModal}
      >
        <View style={styles.centro}>
          <Animated.View style={[styles.modal, { transform: [{ scale: scaleValue }] }]}>
            <Text style={styles.textoModal}>{materialSelecionado?.nome}</Text>
            <ScrollView style={styles.descricaoModal}>
              <Text style={styles.descricaoTexto}>{materialSelecionado?.descricao}</Text>
            </ScrollView>
            <Button title="Fechar" onPress={fecharModal} />
          </Animated.View>
        </View>
      </Modal>
    </View>
  );
}

// para altera√ß√µes no design ---------------------------------------------------------------------
const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#fff',
  },
  containerSuperior: {
    backgroundColor: '#BEE1A1',
    padding: 20,
  },
  containerInferior: {
    flex: 1,
    backgroundColor: '#D9EAD3',
  },
  textoPrincipal: {
    fontSize: 24,
    fontWeight: 'bold',
    marginBottom: 10,
  },
  containerPesquisa: {
    flexDirection: 'row',
    alignItems: 'center',
    borderRadius: 10,
    paddingHorizontal: 10,
    backgroundColor: 'rgba(0, 0, 0, 0.1)',
    marginTop: 10,
  },
  input: {
    flex: 1,
    height: 40,
    color: '#000',
    paddingHorizontal: 10,
  },
  botaoPesquisa: {
    padding: 10,
  },
  textoBotaoPesquisa: {
    fontSize: 20,
  },
  lista: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    paddingHorizontal: 5,
  },
  coluna: {
    flex: 1,
    alignItems: 'center',
  },
  item: {
    width: larguraItem,
    height: alturaItem, // Altura dos itens recicl√°veis
    alignItems: 'center',
    justifyContent: 'center',
    marginVertical: 10,
    borderRadius: 10,
    borderWidth: 1,
    borderColor: '#ccc',
  },
  material: {
    fontSize: 20,
    fontWeight: 'bold',
    color: '#fff', // Cor do texto dos itens
    textAlign: 'center', // Alinhar o texto ao centro
    position: 'absolute', // Posicionar o texto de acordo com a caixa
    bottom: 0, // Alinhar o texto na parte inferior
    width: '100%', // Largura igual √† do item
    backgroundColor: 'rgba(0, 0, 0, 0.5)', // Fundo semi-transparente
    paddingVertical: 5, // Espa√ßamento interno vertical
    borderBottomLeftRadius: 10, // Arredondamento da borda inferior esquerda
    borderBottomRightRadius: 10, // Arredondamento da borda inferior direita
  },
  centro: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
    backgroundColor: 'rgba(0, 0, 0, 0.5)',
  },
  modal: {
    backgroundColor: 'white',
    borderRadius: 20,
    padding: 35,
    alignItems: 'center',
    elevation: 5,
    maxWidth: 400, // largura m√°xima do modal
    maxHeight: 320, // altura m√°xima do modal
  },
  textoModal: {
    fontSize: 24,
    marginBottom: 15,
    fontWeight: 'bold',
  },
  descricaoModal: {
    maxHeight: 200,
  },
  descricaoTexto: {
    fontSize: 18,
    textAlign: 'justify',
  },
  imagemFundo: {
    width: '100%',
    height: '100%',
    justifyContent: 'flex-end',
    alignItems: 'flex-start',
    borderWidth: 0, // Removendo a borda
    borderRadius: 10, // Bordas arredondadas
    backgroundColor: '#4CAF50', // Cor de fundo relacionada √† reciclagem
  },
});
